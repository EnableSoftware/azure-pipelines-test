trigger:
  branches:
    include:
    - master
  tags:
    include:
    - 'v*'
  paths:
    exclude:
    - .editorconfig
    - .gitattributes
    - .gitignore
    - '*.md'
    - LICENSE

pool:
  vmImage: 'Ubuntu-16.04'

variables:
  BuildConfiguration: 'Release'
  COREHOST_TRACE: 0
  DOTNET_CLI_TELEMETRY_OPTOUT: 1
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1

steps:
- script: dotnet --info
  displayName: Display .NET Core SDK information

- script: dotnet build --configuration $(BuildConfiguration)
  displayName: Build solution
  failOnStderr: true

# TODO Add code coverage
- script: dotnet test --no-build --configuration $(BuildConfiguration) --logger trx
  displayName: Run tests
  failOnStderr: true

- task: PublishTestResults@2
  displayName: Publish test results
  condition: succeededOrFailed()
  inputs:
    testRunner: VSTest
    testResultsFiles: '**/*.trx'

- script: dotnet pack --no-build --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)
  displayName: Create NuGet package
  failOnStderr: true

- task: NuGetCommand@2
  displayName: Publish NuGet package
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: NuGet

- task: PublishBuildArtifacts@1
  displayName: Publish build artifacts

# TODO Support creating GitHub releases.
# TODO Mark the release as pre-release when building a pre-release tag.
- task: GithubRelease@0 
  displayName: Create GitHub release
  enabled: false
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/v'))
  inputs:
    githubConnection: EnableSoftware
    repositoryName: EnableSoftware/azure-pipelines-test
